<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Robwolver</title>
  
  <subtitle>萝卜圆里的一只狼。← 错别字吗？故意的~</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="/"/>
  <updated>2018-06-07T14:08:29.985Z</updated>
  <id>/</id>
  
  <author>
    <name>Robwolver</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>又来说点什么</title>
    <link href="/2018/06/07/say-something-2/"/>
    <id>/2018/06/07/say-something-2/</id>
    <published>2018-06-07T07:38:13.000Z</published>
    <updated>2018-06-07T14:08:29.985Z</updated>
    
    <content type="html"><![CDATA[<p>可怜之人必有可恨之处。 ————送给自己的一句话<br><a id="more"></a></p><blockquote><p>2018年5月28日 0:22<br>这几天一直在想三个话题</p><ol><li>理性与感性</li><li>“中央空调”这一类人</li><li>自己是坏人吗</li></ol></blockquote><h3 id="理性与感性"><a href="#理性与感性" class="headerlink" title="理性与感性"></a>理性与感性</h3><p>某天晚上无意中看到个求职节目，有个女孩选了一个和她专业完全不搭边的职业，面对面试官的问题，回答当然也是完全不搭边的（最后灯全灭了hhhhh）。求职顾问在最后问了女孩这样一个问题（转述，非原话）</p><p>“你的热情还在吗，以后你是以热情为主，还是理性为主？”<br>———“坚持梦想”</p><h4 id="了解"><a href="#了解" class="headerlink" title="了解"></a>了解</h4><p>感性认识是人们在实践中，通过感觉器官所获得的关于事物外部联系和表面特征的认识形式；感性行为是指从情感出发的行为。<br>理性认识是通过抽象思维把握的有关事物本质及规律的认识；理性行为是指由理智控制的行为。[<a href="/2018/06/07/say-something-2/#注脚">1</a>]</p><h4 id="认知自己"><a href="#认知自己" class="headerlink" title="认知自己"></a>认知自己</h4><p>15 年是我的分界线…哦不，准确来说是 16 年。<br>16 年以前，自己应该是以理性思维为主，还能做点什么给大家，自己创建了很多个企划，也成了其它一些项目的 leader。差不多 15 年开始接触兽人 [<a href="/2018/06/07/say-something-2/#注脚">2</a>]，16 年中旬接触圈子，<del>可能是因为有个半吊子大佬光环，</del>和一个小哥哥好上了。因为自己从来没有过恋爱经验（其实那个时候自己完全没有恋爱的想法），问题层出不穷，有很多记不清了，是以一个很不快的结局结束的。那时开始自己开始慢慢往感性上靠，后面处于”为情所困”的状态，无心做事、或者说做不好事，情感覆盖了自己的生活，经历三次分手，自己终于意识到必须要重视这个问题。直到现在才知道它对自己的影响很严重:“虚假的，不是我自己想要的”。这种感性可以叫贪婪、冲动、无理智的，与以前的自己截然相反。大概自己的坠落（崩坏、自我毁灭？）就是因为没有正确的对应吧。</p><h3 id="“中央空调”"><a href="#“中央空调”" class="headerlink" title="“中央空调”"></a>“中央空调”</h3><p>第一次接触这个名词，是在一部韩剧《无法阻挡的 HighKick 3》，中央空调指的是 “温暖一个人叫暖男。温暖所有人叫中央空调” [<a href="/2018/06/07/say-something-2/#注脚">3</a>]。有一段时间，自己莫名其妙的对这一群人有些厌恶，实在没办法排解，就去找一个“中央空调”聊了聊，结果是：我不知道为什么我能怎么办啊。一个词点醒：噢，贪婪！后面一段时间，没事儿就问了问别人“你觉得我算中央空调吗？” ———算啊！<br>excuse me…自家人打自家人？</p><h4 id="认知"><a href="#认知" class="headerlink" title="认知"></a>认知</h4><p>昨晚和皓皓聊天的时候，终于有了个最详细的评价（啊 唉）<br><figure class="image-bubble">                <div class="img-lightbox">                    <div class="overlay"></div>                    <img src="http://wx2.sinaimg.cn/large/006RBDhEgy1fs2xoklm7uj30hf0gx76p.jpg" alt="聊天记录" title="">                </div>                <div class="image-caption">聊天记录</div>            </figure><br>经常没电的老空调…挂掉</p><h3 id="自己是坏人吗"><a href="#自己是坏人吗" class="headerlink" title="自己是坏人吗"></a>自己是坏人吗</h3><p>从某种角度上来说，是，很坏。<br>除了在感性与理性上的<a href="/2018/06/07/say-something-2/#认知自己">认知</a>，在某个时间突然意识到自己有“可塑性”与“可变性”：面对不同性格的人，自己会用不同的思维去对待，往往它是固定的，亦或由于不可抗力的原因而受到改变。<br>很危险，不知道自己是因为倾向于不正确的感性所导致的结果还是什么，不能再这样下去了。</p><p>谢谢皓皓[<a href="/2018/06/07/say-something-2/#注脚">4</a>]陪伴我，在发病的时候让我沉静下来，经常在一起交流很多（问题、现象？），可以说是自己的指路牌了。<br>改变是个很漫长的过程，还有很多没被发现呢。</p><p>(say-something-1 哪去了？试着敲下 /draft/xxxxx 看看！)</p><hr><h1 id="注脚"><a href="#注脚" class="headerlink" title="注脚"></a>注脚</h1><p>[1]：(2013 版) 马哲原理 第二章 认识的本质及其发展规律 (<a href="https://wenku.baidu.com/view/e6eda3b00975f46527d3e1d0" target="_blank" rel="noopener">wenku.baidu.com</a>)<br>[2]：这里的兽人指的是人型，具有完全兽向性状的生物。(个人认为)<br>[3]：引用自丢虎 (LaidBear)<br>[4]：皓皓 (<a href="https://weibo.com/u/5790634544" target="_blank" rel="noopener">weibo.com</a>)</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;可怜之人必有可恨之处。 ————送给自己的一句话&lt;br&gt;
    
    </summary>
    
      <category term="生活随想" scheme="/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="杂文" scheme="/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>新年快乐~</title>
    <link href="/2018/02/15/happy-new-year/"/>
    <id>/2018/02/15/happy-new-year/</id>
    <published>2018-02-14T17:37:13.000Z</published>
    <updated>2018-03-03T19:21:25.445Z</updated>
    
    <content type="html"><![CDATA[<p>今天才算把博客搭完吧….其实去年试过一些博客平台，例如 Wordpress、typecho，都挺不错可是没钱啊 QAQ。只能用免费的 hexo。不管怎么样，好好用下去，记录自己的生活。<br>刚好赶上新年诶，祝大家新年快乐~<br>（不要点汉堡菜单里的东西，都不好看）</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天才算把博客搭完吧….其实去年试过一些博客平台，例如 Wordpress、typecho，都挺不错可是没钱啊 QAQ。只能用免费的 hexo。不管怎么样，好好用下去，记录自己的生活。&lt;br&gt;刚好赶上新年诶，祝大家新年快乐~&lt;br&gt;（不要点汉堡菜单里的东西，都不好看）&lt;/p
      
    
    </summary>
    
      <category term="生活随想" scheme="/categories/%E7%94%9F%E6%B4%BB%E9%9A%8F%E6%83%B3/"/>
    
    
      <category term="杂文" scheme="/tags/%E6%9D%82%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>红米 Note 3 在 Lineage OS 上的简单指纹修复方法</title>
    <link href="/2018/02/13/rn3-goodix-solve/"/>
    <id>/2018/02/13/rn3-goodix-solve/</id>
    <published>2018-02-13T13:05:19.000Z</published>
    <updated>2018-06-07T08:43:46.412Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这篇文章完成日期在：2017-02-08 22:00:08。<br>现在无需修复，包括 8.x (Oreo)、7.x (Nougat)、6.0 (Marshmallow、17 年 6 月后的版本)</p></blockquote><p>指纹这玩意，其实我不怎么玩来着（甚至锁屏都没密码 2333）。在酷安发某文章的时候有个酷友提到了关于指纹的问题，再加上白天的时候台式机给客人在玩，只能拿笔电玩玩，于是就捣鼓了下指纹。<br><a id="more"></a><br>如果你是 FPC 用户，那你可以跳过这篇文章了（FPC 指纹妥妥滴用，这篇文章主要说的是 Goodix 指纹的修复方法）。<br>这里简单讲一下，红米 Note 3 有不同的批次，有不同的批次就有不同厂商的元件。指纹主要分两家： FPC 与 Goodix。小米在 Gi(a)t(y)hub 里有关红米 Note 3 的内核（Android L）代码中，对于 Goodix 的描述并不详细，所以开发者们很难通过这种方法来生成指纹所需要的驱动和相关文件。红米 Note 3 有了开发版的 Android 6.0 后，xda-developers 的大神们就开始着手修复 Android 6.0 以上的指纹问题。有一个临时解决方法，只需要补充 boot.img 和 System 有关 Goodix 的代码与文件即可。<br><strong>请注意：<br>1.这篇文章是在 Linux 的环境下进行操作得出的，Windows 下有相应的替代方法<br>2.此方法仅针对 Lineage OS，其它第三方系统请自测<br>3.所有操作都在 /home 目录下完成<br>4.该方法不稳定，会有指纹短暂性失效的 bug</strong></p><hr><h2 id="提前准备"><a href="#提前准备" class="headerlink" title="提前准备"></a>提前准备</h2><ul><li>Lineage OS 刷机包<br>下载地址：<a href="https://download.lineageos.org" target="_blank" rel="noopener">https://download.lineageos.org</a></li><li>需要的 Goodix 文件<br>Goodix 指纹的驱动、配置等<br>下载地址：<a href="http://ok0h0zfk0.bkt.clouddn.com/Goodix.zip" target="_blank" rel="noopener">点我</a></li><li>boot.img<br>这玩意就不多说了吧，从你下载的 Lineage OS 刷机包里面提取就可以了</li><li>mkbootimg<br>Linux 下解包 boot.img 的常用工具，这里我推荐 <a href="https://github.com/xiaolu" target="_blank" rel="noopener">xiaolu</a> 的解包工具（下载<a href="https://github.com/xiaolu/mkbootimg_tools" target="_blank" rel="noopener">点我</a>）</li><li>file_contexts 与 file_contexts.bin 的相互转换工具<br>在 Android 7.x 中，解包 ramdisk 后的file_contexts.bin无法直接编辑，需要通过工具来进行转换，cofface 大神做了一个转换工具解决了这个问题<br>下载地址：<a href="http://blog.cofface.com/archives/2255.html" target="_blank" rel="noopener">http://blog.cofface.com/archives/2255.html</a></li></ul><blockquote><p>注意：</p><ol><li>下载 Lineage OS 的时候，请选择正确的机型 ( <code>Xiaomi</code> &gt; <code>kenzo</code> )</li><li><code>mkbootimg</code> 的使用方法在这里做省略，Github 中的 <code>readme.md</code> 下有详细介绍。</li><li>转换工具必须要在 Linux 下进行操作。</li></ol></blockquote><hr><h2 id="第一步：解压刷机包、将缺失的文件替换进去"><a href="#第一步：解压刷机包、将缺失的文件替换进去" class="headerlink" title="第一步：解压刷机包、将缺失的文件替换进去"></a>第一步：解压刷机包、将缺失的文件替换进去</h2><ol><li>输入命令<br><code>unzip 你下载的LineageOS刷机包.zip -d Lineage</code><br>你会发现 /home 中多了个 Lineage 文件夹，这就是解压的刷机包文件，boot.img 也在里面</li><li>输入命令<br><code>unzip Goodix.zip -d Goodix</code><br>你又会发现 /home 中多了个 Goodix 文件夹，这就是需要补上去的指纹补丁</li><li>在文件管理器中直接将 Goodix 文件夹中的文件复制到 <code>Lineage/system</code> 中<br>至此，补充完成</li></ol><hr><h2 id="第二步：解开-boot-img，得到-ramdisk-和-kernel"><a href="#第二步：解开-boot-img，得到-ramdisk-和-kernel" class="headerlink" title="第二步：解开 boot.img，得到 ramdisk 和 kernel"></a>第二步：解开 boot.img，得到 <code>ramdisk</code> 和 <code>kernel</code></h2><ol><li>将 boot.img 复制到 <code>/home</code>，同时将工具也扔在这里</li><li>输入命令<br><code>sudo sh mkboot boot.img output</code><br>解开的 boot.img 将会在 <code>output</code> 文件夹中</li></ol><hr><h2 id="第三步：转换-file-contexts-bin"><a href="#第三步：转换-file-contexts-bin" class="headerlink" title="第三步：转换 file_contexts.bin"></a>第三步：转换 file_contexts.bin</h2><p>输入命令<br><code>./sefcontext -o file_contexts file_contexts.bin</code><br>转换完成</p><hr><h2 id="第四步：补充-boot-img-中有关的缺失代码"><a href="#第四步：补充-boot-img-中有关的缺失代码" class="headerlink" title="第四步：补充 boot.img 中有关的缺失代码"></a>第四步：补充 boot.img 中有关的缺失代码</h2><ol><li><p>打开 <code>file_contexts</code>，用搜索敲下 <code># Fingerprint</code><br>这里是有关指纹的代码地方，你会发现这里只有 <code>fpc1020</code> 的有关描述，并没有 Goodix 的，下面我们把它添加到其中<br>在下面直接添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">/dev/gf66xx-spi     u:object_r:gx_fpd_device:s0</span><br><span class="line">/dev/ttyACM[0-9]*   u:object_r:gx_fpd_device:s0</span><br><span class="line">/dev/goodix_fp*     u:object_r:gx_fpd_device:s0</span><br><span class="line">/system/bin/gx_fpd       u:object_r:gx_fpd_exec:s0</span><br><span class="line">/data/system/fingerprint(/.*)?    u:object_r:gx_fpd_data_file:s0</span><br><span class="line">/data/goodix/*  u:object_r:gx_fpd_data_file:s0</span><br><span class="line">/persist/data/gxfp(/.*)?  u:object_r:gx_fpd_data_file:s0</span><br><span class="line">/persist/data/gxfp  u:object_r:gx_fpd_data_file:s0</span><br><span class="line">/system/lib/libfpservice.so       u:object_r:gx_fpd_lib_file:s0</span><br><span class="line">/system/lib/libfpalgorithm.so     u:object_r:gx_fpd_lib_file:s0</span><br><span class="line">/system/lib/libfp_client.so       u:object_r:gx_fp_lib_file:s0</span><br><span class="line">/system/lib/libfphal.so           u:object_r:gx_fpd_lib_file:s0</span><br><span class="line">/system/lib/libfpnav.so           u:object_r:gx_fpd_lib_file:s0</span><br><span class="line">/system/lib64/libfpservice.so     u:object_r:gx_fpd_lib_file:s0</span><br><span class="line">/system/lib64/libfpalgorithm.so   u:object_r:gx_fpd_lib_file:s0</span><br><span class="line">/system/lib64/libfp_client.so     u:object_r:gx_fp_lib_file:s0</span><br><span class="line">/system/lib64/libfphal.so         u:object_r:gx_fpd_lib_file:s0</span><br><span class="line">/system/lib64/libfpnav.so         u:object_r:gx_fpd_lib_file:s0</span><br></pre></td></tr></table></figure></li><li><p>打开 <code>init.qcom.rc</code>，用搜索敲下 <code>on fs</code><br>在后面直接添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chown system system  /dev/goodix_fp</span><br><span class="line">chmod 0644 /dev/goodix_fp</span><br></pre></td></tr></table></figure></li><li><p>在最后一行敲下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">service gx_fpd /system/bin/gx_fpd</span><br><span class="line">    class late_start</span><br><span class="line">    user system</span><br><span class="line">    group system</span><br><span class="line">    disabled</span><br><span class="line"></span><br><span class="line">on property:persist.sys.fp.sensor=goodix</span><br><span class="line">    start gx_fpd</span><br></pre></td></tr></table></figure></li><li><p>打开 <code>init.qcom.sh</code>，在最后一行敲下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if [ -d /sys/class/goodix_fp ]; then</span><br><span class="line">    setprop persist.sys.fp.sensor goodix</span><br><span class="line">else</span><br><span class="line">    setprop persist.sys.fp.sensor fpc</span><br><span class="line">fi</span><br></pre></td></tr></table></figure></li></ol><p>全部完成，保存退出</p><hr><h2 id="第五步：还原-file-contexts，重新打包-boot-img，打包刷机包"><a href="#第五步：还原-file-contexts，重新打包-boot-img，打包刷机包" class="headerlink" title="第五步：还原 file_contexts，重新打包 boot.img，打包刷机包"></a>第五步：还原 <code>file_contexts</code>，重新打包 boot.img，打包刷机包</h2><ol><li>输入命令<br><code>./sefcontext_compile -o file_contexts.bin file_contexts</code><br>转换完成</li><li>输入命令<br><code>sudo sh mkboot output boot1.img</code><br>boot.img 打包完成，名称为 boot1.img</li><li>将 boot1.img 重命名为 boot.img，并复制到解压的刷机包文件，替换掉原来的</li><li>输入命令<br><code>zip -r lineage.zip Lineage</code><br>打包完成</li></ol><hr><p>全部完成，刷进去试试看吧！</p><hr><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2017/02/09 00:04 创建文章<br>2017/02/09 05:26 修改1<br>2018/02/13 16:28 修改2</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这篇文章完成日期在：2017-02-08 22:00:08。&lt;br&gt;现在无需修复，包括 8.x (Oreo)、7.x (Nougat)、6.0 (Marshmallow、17 年 6 月后的版本)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;指纹这玩意，其实我不怎么玩来着（甚至锁屏都没密码 2333）。在酷安发某文章的时候有个酷友提到了关于指纹的问题，再加上白天的时候台式机给客人在玩，只能拿笔电玩玩，于是就捣鼓了下指纹。&lt;br&gt;
    
    </summary>
    
      <category term="不是教程" scheme="/categories/%E4%B8%8D%E6%98%AF%E6%95%99%E7%A8%8B/"/>
    
    
      <category term="Android" scheme="/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Lineage OS 刷机过程和简评（红米 Note3）</title>
    <link href="/2018/02/13/lineageos-on-rn3/"/>
    <id>/2018/02/13/lineageos-on-rn3/</id>
    <published>2018-02-13T13:05:01.000Z</published>
    <updated>2018-06-07T08:43:30.406Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>这篇文章完成日期在：2017-02-05 13:32:23。</p></blockquote><p>去年就听说了 Cyanogenmod 出现困难的局面情况，接着在年底 Cyanogen 发布了一个震撼级别的消息：Cyanogen 将在年底停止服务（<a href="https://cyngn.com/blog/cyanogen-services-shutting-down" target="_blank" rel="noopener">原地址</a>）。这种消息还是很劲爆的了，毕竟 Cyanogenmod 是一个有很久历史的 Android 第三方系统。在停止服务后原团队成员开始筹划下一步的动作，让大家放心的是原团队成员重新以 Lineage OS 的新项目继续开发。年初 Lineage OS 开始编译更新，那时候我在用 MIUI国内版吧，就想借此机会换掉 MIUI 重新回到原生 Android 的怀抱。<br><a id="more"></a><br><strong>请注意：<br>1.这是个人操作得出的方法，仅具有参考性；如果出现任何问题本人不承担任何责任。<br>2.刷机过程不提供任何截图说明。<br>3.如果觉得步骤太麻烦，可以直接跳到补充说明看简化版步骤。<br>4.一切操作都是在手机默认出厂的设置下进行的（锁了 BootLoader 并且加密了 Data 分区）。</strong></p><hr><h2 id="提前准备"><a href="#提前准备" class="headerlink" title="提前准备"></a>提前准备</h2><ul><li>BootLoader 解锁工具<br>点击<a href="http://www.miui.com/unlock" target="_blank" rel="noopener">这里</a>，只要跟着说明填写申请就可以了，等待到审核通过后就会获得解锁工具</li><li>Android SDK<br>Android SDK 中的 <code>platform-tools</code>（内有 <code>fastboot</code> 命令行工具，用来安装 Recovery），<code>tools</code> 安装可选（最好选上吧，因为有 <code>adb</code> 命令行工具，方便）</li><li>Recovery<br>红米 Note3 使用人数最多的也就只有 TWRP 吧，默认删除 <code>dm-verity</code> ，至于<code>dm-verity</code> 是什么，可以参考<a href="https://source.android.com/security/verifiedboot" target="_blank" rel="noopener">官方文档</a>，简单理解就是校验，防止分区被修改一个措施<br>地址：<a href="https://twrp.me/xiaomi/xiaomiredminote3.html" target="_blank" rel="noopener">点我</a></li><li>刷机包 / Root 包<br>Lineage OS 的官方下载页面：<a href="https://download.lineageos.org" target="_blank" rel="noopener">https://download.lineageos.org</a><br>（红米 Note 3 的设备代号是 <code>kenzo</code>，直接选择 <code>Xiaomi&gt;kenzo</code>）<br>Root 包下载：<a href="https://download.lineageos.org/extras" target="_blank" rel="noopener">https://download.lineageos.org/extras</a><br>因为 Lineage OS 不自带 Root 权限，所以需要刷官方提供的 Root 包以启用 Root<br>（<code>kenzo</code> 因为是 64 位架构所以选择 <code>su (arm64)</code> 下载）</li><li>底层（如果手机运行的是最新版 MIUI，可以跳过）<br>地址：<a href="https://forum.xda-developers.com/redmi-note-3/development/firmware-hmnote3proglobal-t3574361" target="_blank" rel="noopener">点我</a></li><li>内核（可选）<br>Lineage OS 基本上已经完善了，但如果想提高性能，可以刷第三方内核<br>第三方内核太多了，在 xda-developers 里面有很多第三方内核<br>内核：<a href="https://forum.xda-developers.com/redmi-note-3/development/" target="_blank" rel="noopener">点我</a></li><li>GApps（可选，如果想体验 Google 服务必刷）<br>现在的 GApps 有挺多的，最出名的是 OpenGApps<br>OpenGApps 网址：<a href="http://opengapps.org" target="_blank" rel="noopener">http://opengapps.org</a><br>（在这里依次选择 <code>ARM64</code>，最新的 Lineage OS 基于 Android 7.1，所以选择 7.1。类型因为个人喜好这里我选择的 <code>aroma</code>，带有安装时可选的功能，如果想体验标准 Google 服务请选择 <code>micro</code>）</li><li>备份数据<br>在这里我备份了自己的内置存储和应用数据<br>如果你的主要文件存在内置存储并且 MIUI 对应的 Android 版本为 6.0，请务必全部备份好，后续步骤会清空内置存储，如果是基于 Android 5.x 的 MIUI，请跳过对应步骤</li></ul><blockquote><p>注意：</p><ol><li><code>experimental</code> 正如其名，实验版，在这里是提供给旧的 Cyanogenmod 用户用来迁移到 Lineage OS 用的，如果你目前的系统是 Cyanogenmod，可以先刷这个包然后直接刷 <code>nightly</code> 即可完成升级迁移过程，如果不是请不要下载此包，此版本有水印并且不提供给日常使用。</li><li>如果你是其它机型，请选择对应的架构进行下载！带有 <code>removal</code> 的为移除包，在你安装完 Root 权限后如果想移除则刷此包。否则不要下。</li></ol></blockquote><hr><h2 id="第一步：解锁-BootLoader"><a href="#第一步：解锁-BootLoader" class="headerlink" title="第一步：解锁 BootLoader"></a>第一步：解锁 BootLoader</h2><p>开始解锁</p><ol><li>按<code>电源</code> + <code>音量下</code>，进入 <code>bootloader Mode</code>（未解锁之前用 <code>bootloader</code> 更合适吧）</li><li>打开软件，使用数据线将手机连接电脑</li><li>软件会出现已连接手机的界面，确认无误后点击解锁</li><li>等待一段时间后，出现解锁成功的界面</li></ol><p>已完成 <code>bootloader</code> 解锁操作<br>此时点击完成后手机会重启，但不要进入到系统，依然按 <code>电源</code> + <code>音量下</code> 进入到 <code>fastboot</code> 界面，同时保持手机与电脑的连接</p><blockquote><p>注意：</p><ol><li>如果需要解锁请刷 MIUI 开发版，稳定版暂不支持解锁操作！在这里省略 MIUI 稳定版升级成开发版的方法</li><li>解锁前必须保证手机系统绑定的 MIUI 账户和申请解锁的账户相同，否则会出现验证失败。</li></ol></blockquote><hr><h2 id="第二步：安装-Recovery-并清空-Data"><a href="#第二步：安装-Recovery-并清空-Data" class="headerlink" title="第二步：安装 Recovery 并清空 Data"></a>第二步：安装 Recovery 并清空 Data</h2><ol><li>找到你安装的 <code>fastboot</code> 所在目录，按住 <code>Shift</code> + <code>右键</code>，选择 <code>Open command window here(在此处打开命令行窗口)</code>，输入以下命令：<br><code>fastboot flash recovery 你下载的Recovery名字.img</code></li><li>等待完成刷入后，让我们来启动 TWRP<br><code>fastboot boot 你下载的Recovery名字.img</code></li><li>稍等片刻后，手机就会进入 TWRP<br><strong>如果你是基于 Android 5.x 的 MIUI，可跳过下面步骤</strong><br><em>重点部分：因为 MIUI 官方对基于 Android 6.0 以上的 MIUI 进行了 <code>data</code> 分区加密，目前没有办法解密，所以会清空 <code>data</code> 分区以解决这个问题，不然无法刷机</em></li><li>出现 <code>Enter Password</code> 界面后，选择 <code>Cancel</code> ，然后选择语言，点击 <code>Select Language</code> 向下滑选择 <code>中文（简体）</code>，此时界面就会变成中文了，然后会询问<code>保持System分区只读模式？</code>，在这里直接滑动下面的按钮以确认修改。</li><li>然后点击 <code>清除</code> &gt; <code>格式化 Data 分区</code></li><li>在对应界面输入 <code>yes</code>，然后等待操作完成</li></ol><blockquote><p>注意：</p><ol><li>请保证你备份好所有数据，请保证你备份好所有数据，请保证你备份好所有数据！进行该操作所有分区都会清空！</li><li>如果你是基于 Android 5.x 的 MIUI，请跳过清除 data 的步骤，除非你想格式化整个手机。</li></ol></blockquote><p><code>data</code> 清空完毕<br>返回主界面，点击重启，选择 <code>Recovery</code>。此时依然不要断开电脑与手机的连接！</p><hr><h2 id="第三步：刷入-Lineage-OS、Root-包、GApps、第三方内核"><a href="#第三步：刷入-Lineage-OS、Root-包、GApps、第三方内核" class="headerlink" title="第三步：刷入 Lineage OS、Root 包、GApps、第三方内核"></a>第三步：刷入 Lineage OS、Root 包、GApps、第三方内核</h2><ol><li>在重启后的 Recovery 中选择 <code>清除</code> &gt; <code>高级清除菜单</code>，将 <code>Dalvik / ART Cache</code>、<code>System</code>、<code>Cache</code>、<code>Cust</code>勾选，然后滑动确认清除</li><li>在主界面中选择 <code>挂载</code>，然后检查 <code>MTP 模式</code> 是否开启，如果开启并且电脑正确显示 Redmi Note 3 的设备，则将下载的 Lineage OS 刷机包、Root 包、GApps、内核 复制到根目录（这里以复制到内置存储的根目录为例）</li><li>安装完成后返回主界面，选择<code>安装</code>，点击你所下载的 <code>Lineage OS 名称.zip</code>，在确认界面中点击添加更多卡刷包，然后选择 <code>底层</code>、<code>你下载的Root包名称.zip</code> 、 <code>你下载的GApps名称.zip</code> 和 <code>你下载的内核安装包.zip</code></li><li>添加完成后滑动开始刷机</li><li>等待数分钟，直到全部完成</li><li>再清除一次 <code>Dalvik / ART Cache</code></li></ol><blockquote><p>注意</p><ol><li>如果出现刷机失败，请仔细观察错误代码然后查找资料解决。</li><li>复制文件到手机的方法有多种，这里以简单并且常用的 <code>MTP</code> 方式说明。</li></ol></blockquote><p>接下来就是重启了 =w=，如果步骤没错的话一切都会顺利并且能看见开机动画进入系统。新的开机动画还挺好看的，眼睛就盯着那几个点转来转去（<br>进入系统后，久违的就是 Google 化的欢迎向导（刷了 GApps 后），恢复应用数据和内置存储，然后更改个人设置喜好<br>Lineage OS 相对于 Cyanogenmod 还是没变多少，大多就是改了个名，然后彩蛋界面变了，再就是贡献者的图案也变了。</p><hr><h2 id="补充内容"><a href="#补充内容" class="headerlink" title="补充内容"></a>补充内容</h2><ul><li>如何开启 Root<br>（前提是你刷了 Root 包）<br>进入 <code>设置</code> &gt; <code>关于手机</code>，狂按 <code>版本号</code> ，显示 <code>已启用开发者选项</code>。然后进入 <code>开发者选项</code>，点击 <code>Root 授权</code>，选择 <code>应用 与 ADB</code><br>Root 权限成功开启</li><li>修改 DPI<br>DPI 可以理解成是像素密度（非屏幕），DPI 值越大像素越小，所以显示的东西也就会越小越多，Google 在 Android 7.x 中开放了对于 DPI 的修改，可以直接进入 <code>开发者选项</code>，在绘图中点击 <code>最小宽度</code>，选择合适的值即可，在这里我选择的是 <code>380dp</code>。<br>点击 <code>确定</code>，修改完成</li><li>如果你看不懂上面这些，这里还有个简化版<br>（此方法不需要安装 Android SDK）<br>解锁同第一步，解锁后继续停留在 <code>fastboot</code> 页面<br>刷入 TWRP<br>保持手机与电脑的连接，打开工具，按照说明操作<br>如果成功，将会自动进入到 Recovery 页面<br><strong>如果你是基于 Android 5.x 的 MIUI，可跳过下面步骤</strong><br><em>重点部分：因为 MIUI 官方对基于 Android 6.0 以上的 MIUI 进行了 <code>data</code> 分区加密，目前没有办法解密，所以会清空 <code>data</code> 分区以解决这个问题，不然无法刷机。内含重要数据的请做好备份！</em><br>输入密码页面点击取消，然后改好语言，点击 <code>清除</code> &gt; <code>格式化 data 分区</code><br>输入 <code>yes</code>，清除内置存储和 data 分区<br><strong>如果你是基于 Android 5.x 的 MIUI，可跳过上面步骤</strong><br>返回主菜单，选择 <code>挂载</code>，打开 <code>MTP 挂载存储</code>，将 底层、Lineage OS 刷机包、Root 包、GApps、内核包 放在内置存储根目录<br>开始刷机，一起刷还是分开刷随你选<br>一切都刷好后，记得在刷最后一个包的完成页面点击 <code>清除Dalvik / ART Cache</code><br>重启，待进入系统<br>进入系统后恢复数据，完成</li></ul><blockquote><p>注意：</p><ol><li>记得备份好手机所有数据，如果不备份数据导致所有数据丢失后果自负。</li><li>此方法是最简单粗暴的方法，成功性未知，如果担心出现奇葩问题请参考完整版操作。</li></ol></blockquote><hr><h2 id="更新记录"><a href="#更新记录" class="headerlink" title="更新记录"></a>更新记录</h2><p>2017/02/05 23:57 添加简化版步骤<br>2017/02/06 20:57 修改zz错误<br>2017/02/07 20:55 添加刷入底层和内核<br>2017/04/16 13:53 更新方法 修改图床</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这篇文章完成日期在：2017-02-05 13:32:23。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;去年就听说了 Cyanogenmod 出现困难的局面情况，接着在年底 Cyanogen 发布了一个震撼级别的消息：Cyanogen 将在年底停止服务（&lt;a href=&quot;https://cyngn.com/blog/cyanogen-services-shutting-down&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原地址&lt;/a&gt;）。这种消息还是很劲爆的了，毕竟 Cyanogenmod 是一个有很久历史的 Android 第三方系统。在停止服务后原团队成员开始筹划下一步的动作，让大家放心的是原团队成员重新以 Lineage OS 的新项目继续开发。年初 Lineage OS 开始编译更新，那时候我在用 MIUI国内版吧，就想借此机会换掉 MIUI 重新回到原生 Android 的怀抱。&lt;br&gt;
    
    </summary>
    
      <category term="测评体验" scheme="/categories/%E6%B5%8B%E8%AF%84%E4%BD%93%E9%AA%8C/"/>
    
    
      <category term="Android" scheme="/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Hello World!</title>
    <link href="/2018/02/12/hello-world/"/>
    <id>/2018/02/12/hello-world/</id>
    <published>2018-02-12T07:50:03.583Z</published>
    <updated>2018-03-03T19:21:18.665Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
