[{"title":"随便说点什么","date":"2018-04-15T06:40:24.000Z","path":"2018/04/15/say-something-1/","text":"博客这玩意儿特别好使。从搭博客的想法到现在，已经一年了，用手指头数了数自己以前写过的文章，挺多的，到最后还是全部扔掉了，脑子里掖着一句话：“一段经历改变一个人。”突然发现自己写文章都有个好玩的规律，写下来，等一年或者很多年后再去看，阅后只想发表一个看法：“啊呀呀，那时候的我真 TM XXXXX…”不知道是总是用逻辑处事的原因，到现在因为双相，交谈和处事变得十分奇怪，如果语言表达突然爆炸，见谅。 随便说点什么，顺便挖一下黑历史。 不卖惨啊！我的人声，好惨啊！（错别字？故意的）最近几个月特别糟糕，从 17 年初断药到暑假，状态一直都很好，没什么糟心的事情。开学后，事情太多，比赛太多，再加上又一次恋爱带来的压力，感觉复发了，当时认为自己只是抑郁症复发，吃百忧解后效果甚微，去医院一检查，双相障碍 2，自己彻底爆炸。那个时候，对象告诉我：我要好好陪在你身边。到后面，生活里接二连三打击的事情（家庭关系、生活开支、气人的事情），再加上发病时对象的一次又一次失望（没有控制住自己，损坏东西、做傻事、无厘头语言），对象受不了，分了，不太想提太多，后面再说。 我喜欢你！我要和你在一起！这句话是从扭曲的内心里提出来的，事情发生在大约一年半前。那个时候可能是和初恋分手吧，具体事情不提，大概是好几天晚上没睡觉精神不好 balabala 的，或许是心理没有受到正确引导（那个时候是一个人生活的，对所有事物保持抗拒态度），有了一些扭曲的想法，不如说是填补内心的空虚？看见一个人，“哇好喜欢我想和他在一起”，于是……….三个月的时间对三个人表白（都是没认识多久的），失败。现在看起来，想笑，应该是苦笑。 柯林是谁？他做了什么？不知道有没有人还记得曾经有一个叫柯林的兽特别活跃，可能不记得了吧。就在去年的四月，突然萌发出一个马甲的想法（以一个不是本人、性格思维与自身个体完全不相符的形式存在），于是创建 QQ 和其它社交网络，有了柯林这样的一个生物，设定的性格是完全依赖、不反抗的形象，结果…嗯，收获到一段感情（三人感情，或者说很乱的关系？），到后面不知道是发生什么，应该是自己不想欺骗自己，结束（关系当然变糟糕给别人留下不好的印象啦），从那时候开始我才看透三人感情的含义、明确了自己很厌恶这种关系。在那个时候，自己接触了 ori 这个游戏，又接触了另一个人，大概是他有魅力吧，聊到关于恋爱的方面，是这样的： 知道自己没戏，到后面还是选择去追，对方当然是不理啦…在后面又发生了一个误解：当时正在忙，别人用我的手机（没有设置锁屏密码），对最近聊天的人同时发了一些污秽不堪的消息（低俗脏话），刚好包含他，好感下降了不少….就没有再去接触他了。估计他很讨厌我，应该。在后面自己又玩了 ori，想通了很多东西：做这些是给别人看笑话。 直播 销声匿迹，删掉账户，返回去做真实的自己。 P.S. 现在他和一个好朋友在一起，祝他们幸福。 结束与以后就这样吧，什么也不去想了，看他玩刚认识的时候给他安利的 ori 也挺好的（这个游戏真的很治愈）。自己的话，回到以前的生活轨迹，一年时间多了去，休息养病、研究学术、制作企划，这些都是一辈子也做不完的事情，可以反问自己：为什么要过早的放弃生活？一切事物所产生的结果与影响，都有对应的原因。这是我一直都坚持的一种观点。人性都有黑暗的一面，那一面是不会影响到他人的正常前行。那还有什么困难呢？如果要说，现在应该考虑三个问题： 让自己的主观与客观对应 自己的成长、对于潜意识的认识 什么样的人才适合成为我的对象 得到自己真正需要的东西，最后笑着离开这个世界。这才叫应有的 “死而无憾”。人一辈子也就三万多天，想了想，很短，真的很短，活着就是为了过好这短暂的三万多天吧。","tags":[]},{"title":"新年快乐~","date":"2018-02-14T17:37:13.000Z","path":"2018/02/15/happy-new-year/","text":"今天才算把博客搭完吧….其实去年试过一些博客平台，例如 Wordpress、typecho，都挺不错可是没钱啊 QAQ。只能用免费的 hexo。不管怎么样，好好用下去，记录自己的生活。刚好赶上新年诶，祝大家新年快乐~（不要点汉堡菜单里的东西，都不好看）","tags":[{"name":"杂文","slug":"杂文","permalink":"/tags/杂文/"}]},{"title":"红米 Note 3 在 Lineage OS 上的简单指纹修复方法","date":"2018-02-13T13:05:19.000Z","path":"2018/02/13/rn3-goodix-solve/","text":"该篇文章完成日期在：2017-02-08 22:00:08。现在已经不需要修复了，包括 8.x (Oreo)、7.x (Nougat)、6.0 (Marshmallow、17 年 6 月后的版本) 指纹这玩意，其实我不怎么玩来着（甚至锁屏都没密码 2333）。在酷安发某文章的时候有个酷友提到了关于指纹的问题，再加上白天的时候台式机给客人在玩，只能拿笔电玩玩，于是就捣鼓了下指纹。如果你是 FPC 用户，那你可以跳过这篇文章了（FPC 指纹妥妥滴用，这篇文章主要说的是 Goodix 指纹的修复方法）。这里简单讲一下，红米 Note 3 有不同的批次，有不同的批次就有不同厂商的元件。指纹主要分两家： FPC 与 Goodix。小米在 Gi(a)t(y)hub 里有关红米 Note 3 的内核（Android L）代码中，对于 Goodix 的描述并不详细，所以开发者们很难通过这种方法来生成指纹所需要的驱动和相关文件。红米 Note 3 有了开发版的 Android 6.0 后，xda-developers 的大神们就开始着手修复 Android 6.0 以上的指纹问题。有一个临时解决方法，只需要补充 boot.img 和 System 有关 Goodix 的代码与文件即可。请注意：1.这篇文章是在 Linux 的环境下进行操作得出的，Windows 下有相应的替代方法2.此方法仅针对 Lineage OS，其它第三方系统请自测3.所有操作都在 /home 目录下完成4.该方法不稳定，会有指纹短暂性失效的 bug 提前准备 Lineage OS 刷机包下载地址：https://download.lineageos.org 需要的 Goodix 文件Goodix 指纹的驱动、配置等下载地址：点我 boot.img这玩意就不多说了吧，从你下载的 Lineage OS 刷机包里面提取就可以了 mkbootimgLinux 下解包 boot.img 的常用工具，这里我推荐 xiaolu 的解包工具（下载点我） file_contexts 与 file_contexts.bin 的相互转换工具在 Android 7.x 中，解包 ramdisk 后的file_contexts.bin无法直接编辑，需要通过工具来进行转换，cofface 大神做了一个转换工具解决了这个问题下载地址：http://blog.cofface.com/archives/2255.html 注意： 下载 Lineage OS 的时候，请选择正确的机型 ( Xiaomi &gt; kenzo ) mkbootimg 的使用方法在这里做省略，Github 中的 readme.md 下有详细介绍。 转换工具必须要在 Linux 下进行操作。 第一步：解压刷机包、将缺失的文件替换进去 输入命令unzip 你下载的LineageOS刷机包.zip -d Lineage你会发现 /home 中多了个 Lineage 文件夹，这就是解压的刷机包文件，boot.img 也在里面 输入命令unzip Goodix.zip -d Goodix你又会发现 /home 中多了个 Goodix 文件夹，这就是需要补上去的指纹补丁 在文件管理器中直接将 Goodix 文件夹中的文件复制到 Lineage/system 中至此，补充完成 第二步：解开 boot.img，得到 ramdisk 和 kernel 将 boot.img 复制到 /home，同时将工具也扔在这里 输入命令sudo sh mkboot boot.img output解开的 boot.img 将会在 output 文件夹中 第三步：转换 file_contexts.bin输入命令./sefcontext -o file_contexts file_contexts.bin转换完成 第四步：补充 boot.img 中有关的缺失代码 打开 file_contexts，用搜索敲下 # Fingerprint这里是有关指纹的代码地方，你会发现这里只有 fpc1020 的有关描述，并没有 Goodix 的，下面我们把它添加到其中在下面直接添加 123456789101112131415161718/dev/gf66xx-spi u:object_r:gx_fpd_device:s0/dev/ttyACM[0-9]* u:object_r:gx_fpd_device:s0/dev/goodix_fp* u:object_r:gx_fpd_device:s0/system/bin/gx_fpd u:object_r:gx_fpd_exec:s0/data/system/fingerprint(/.*)? u:object_r:gx_fpd_data_file:s0/data/goodix/* u:object_r:gx_fpd_data_file:s0/persist/data/gxfp(/.*)? u:object_r:gx_fpd_data_file:s0/persist/data/gxfp u:object_r:gx_fpd_data_file:s0/system/lib/libfpservice.so u:object_r:gx_fpd_lib_file:s0/system/lib/libfpalgorithm.so u:object_r:gx_fpd_lib_file:s0/system/lib/libfp_client.so u:object_r:gx_fp_lib_file:s0/system/lib/libfphal.so u:object_r:gx_fpd_lib_file:s0/system/lib/libfpnav.so u:object_r:gx_fpd_lib_file:s0/system/lib64/libfpservice.so u:object_r:gx_fpd_lib_file:s0/system/lib64/libfpalgorithm.so u:object_r:gx_fpd_lib_file:s0/system/lib64/libfp_client.so u:object_r:gx_fp_lib_file:s0/system/lib64/libfphal.so u:object_r:gx_fpd_lib_file:s0/system/lib64/libfpnav.so u:object_r:gx_fpd_lib_file:s0 打开 init.qcom.rc，用搜索敲下 on fs在后面直接添加 12chown system system /dev/goodix_fpchmod 0644 /dev/goodix_fp 在最后一行敲下 12345678service gx_fpd /system/bin/gx_fpd class late_start user system group system disabledon property:persist.sys.fp.sensor=goodix start gx_fpd 打开 init.qcom.sh，在最后一行敲下 12345if [ -d /sys/class/goodix_fp ]; then setprop persist.sys.fp.sensor goodixelse setprop persist.sys.fp.sensor fpcfi 全部完成，保存退出 第五步：还原 file_contexts，重新打包 boot.img，打包刷机包 输入命令./sefcontext_compile -o file_contexts.bin file_contexts转换完成 输入命令sudo sh mkboot output boot1.imgboot.img 打包完成，名称为 boot1.img 将 boot1.img 重命名为 boot.img，并复制到解压的刷机包文件，替换掉原来的 输入命令zip -r lineage.zip Lineage打包完成 全部完成，刷进去试试看吧！ 更新记录2017/02/09 00:04 创建文章2017/02/09 05:26 修改12018/02/13 16:28 修改2","tags":[{"name":"Android","slug":"Android","permalink":"/tags/Android/"}]},{"title":"Lineage OS 刷机过程和简评（红米 Note3）","date":"2018-02-13T13:05:01.000Z","path":"2018/02/13/lineageos-on-rn3/","text":"该篇文章完成日期在：2017-02-05 13:32:23。 去年就听说了 Cyanogenmod 出现困难的局面情况，接着在年底 Cyanogen 发布了一个震撼级别的消息：Cyanogen 将在年底停止服务（原地址）。这种消息还是很劲爆的了，毕竟 Cyanogenmod 是一个有很久历史的 Android 第三方系统。在停止服务后原团队成员开始筹划下一步的动作，让大家放心的是原团队成员重新以 Lineage OS 的新项目继续开发。年初 Lineage OS 开始编译更新，那时候我在用 MIUI国内版吧，就想借此机会换掉 MIUI 重新回到原生 Android 的怀抱。请注意：1.这是个人操作得出的方法，仅具有参考性；如果出现任何问题本人不承担任何责任。2.刷机过程不提供任何截图说明。3.如果觉得步骤太麻烦，可以直接跳到补充说明看简化版步骤。4.一切操作都是在手机默认出厂的设置下进行的（锁了 BootLoader 并且加密了 Data 分区）。 提前准备 BootLoader 解锁工具点击这里，只要跟着说明填写申请就可以了，等待到审核通过后就会获得解锁工具 Android SDKAndroid SDK 中的 platform-tools（内有 fastboot 命令行工具，用来安装 Recovery），tools 安装可选（最好选上吧，因为有 adb 命令行工具，方便） Recovery红米 Note3 使用人数最多的也就只有 TWRP 吧，默认删除 dm-verity ，至于dm-verity 是什么，可以参考官方文档，简单理解就是校验，防止分区被修改一个措施地址：点我 刷机包 / Root 包Lineage OS 的官方下载页面：https://download.lineageos.org（红米 Note 3 的设备代号是 kenzo，直接选择 Xiaomi&gt;kenzo）Root 包下载：https://download.lineageos.org/extras因为 Lineage OS 不自带 Root 权限，所以需要刷官方提供的 Root 包以启用 Root（kenzo 因为是 64 位架构所以选择 su (arm64) 下载） 底层（如果手机运行的是最新版 MIUI，可以跳过）地址：点我 内核（可选）Lineage OS 基本上已经完善了，但如果想提高性能，可以刷第三方内核第三方内核太多了，在 xda-developers 里面有很多第三方内核内核：点我 GApps（可选，如果想体验 Google 服务必刷）现在的 GApps 有挺多的，最出名的是 OpenGAppsOpenGApps 网址：http://opengapps.org（在这里依次选择 ARM64，最新的 Lineage OS 基于 Android 7.1，所以选择 7.1。类型因为个人喜好这里我选择的 aroma，带有安装时可选的功能，如果想体验标准 Google 服务请选择 micro） 备份数据在这里我备份了自己的内置存储和应用数据如果你的主要文件存在内置存储并且 MIUI 对应的 Android 版本为 6.0，请务必全部备份好，后续步骤会清空内置存储，如果是基于 Android 5.x 的 MIUI，请跳过对应步骤 注意： experimental 正如其名，实验版，在这里是提供给旧的 Cyanogenmod 用户用来迁移到 Lineage OS 用的，如果你目前的系统是 Cyanogenmod，可以先刷这个包然后直接刷 nightly 即可完成升级迁移过程，如果不是请不要下载此包，此版本有水印并且不提供给日常使用。 如果你是其它机型，请选择对应的架构进行下载！带有 removal 的为移除包，在你安装完 Root 权限后如果想移除则刷此包。否则不要下。 第一步：解锁 BootLoader开始解锁 按电源 + 音量下，进入 bootloader Mode（未解锁之前用 bootloader 更合适吧） 打开软件，使用数据线将手机连接电脑 软件会出现已连接手机的界面，确认无误后点击解锁 等待一段时间后，出现解锁成功的界面 已完成 bootloader 解锁操作此时点击完成后手机会重启，但不要进入到系统，依然按 电源 + 音量下 进入到 fastboot 界面，同时保持手机与电脑的连接 注意： 如果需要解锁请刷 MIUI 开发版，稳定版暂不支持解锁操作！在这里省略 MIUI 稳定版升级成开发版的方法 解锁前必须保证手机系统绑定的 MIUI 账户和申请解锁的账户相同，否则会出现验证失败。 第二步：安装 Recovery 并清空 Data 找到你安装的 fastboot 所在目录，按住 Shift + 右键，选择 Open command window here(在此处打开命令行窗口)，输入以下命令：fastboot flash recovery 你下载的Recovery名字.img 等待完成刷入后，让我们来启动 TWRPfastboot boot 你下载的Recovery名字.img 稍等片刻后，手机就会进入 TWRP如果你是基于 Android 5.x 的 MIUI，可跳过下面步骤重点部分：因为 MIUI 官方对基于 Android 6.0 以上的 MIUI 进行了 data 分区加密，目前没有办法解密，所以会清空 data 分区以解决这个问题，不然无法刷机 出现 Enter Password 界面后，选择 Cancel ，然后选择语言，点击 Select Language 向下滑选择 中文（简体），此时界面就会变成中文了，然后会询问保持System分区只读模式？，在这里直接滑动下面的按钮以确认修改。 然后点击 清除 &gt; 格式化 Data 分区 在对应界面输入 yes，然后等待操作完成 注意： 请保证你备份好所有数据，请保证你备份好所有数据，请保证你备份好所有数据！进行该操作所有分区都会清空！ 如果你是基于 Android 5.x 的 MIUI，请跳过清除 data 的步骤，除非你想格式化整个手机。 data 清空完毕返回主界面，点击重启，选择 Recovery。此时依然不要断开电脑与手机的连接！ 第三步：刷入 Lineage OS、Root 包、GApps、第三方内核 在重启后的 Recovery 中选择 清除 &gt; 高级清除菜单，将 Dalvik / ART Cache、System、Cache、Cust勾选，然后滑动确认清除 在主界面中选择 挂载，然后检查 MTP 模式 是否开启，如果开启并且电脑正确显示 Redmi Note 3 的设备，则将下载的 Lineage OS 刷机包、Root 包、GApps、内核 复制到根目录（这里以复制到内置存储的根目录为例） 安装完成后返回主界面，选择安装，点击你所下载的 Lineage OS 名称.zip，在确认界面中点击添加更多卡刷包，然后选择 底层、你下载的Root包名称.zip 、 你下载的GApps名称.zip 和 你下载的内核安装包.zip 添加完成后滑动开始刷机 等待数分钟，直到全部完成 再清除一次 Dalvik / ART Cache 注意 如果出现刷机失败，请仔细观察错误代码然后查找资料解决。 复制文件到手机的方法有多种，这里以简单并且常用的 MTP 方式说明。 接下来就是重启了 =w=，如果步骤没错的话一切都会顺利并且能看见开机动画进入系统。新的开机动画还挺好看的，眼睛就盯着那几个点转来转去（进入系统后，久违的就是 Google 化的欢迎向导（刷了 GApps 后），恢复应用数据和内置存储，然后更改个人设置喜好Lineage OS 相对于 Cyanogenmod 还是没变多少，大多就是改了个名，然后彩蛋界面变了，再就是贡献者的图案也变了。 补充内容 如何开启 Root（前提是你刷了 Root 包）进入 设置 &gt; 关于手机，狂按 版本号 ，显示 已启用开发者选项。然后进入 开发者选项，点击 Root 授权，选择 应用 与 ADBRoot 权限成功开启 修改 DPIDPI 可以理解成是像素密度（非屏幕），DPI 值越大像素越小，所以显示的东西也就会越小越多，Google 在 Android 7.x 中开放了对于 DPI 的修改，可以直接进入 开发者选项，在绘图中点击 最小宽度，选择合适的值即可，在这里我选择的是 380dp。点击 确定，修改完成 如果你看不懂上面这些，这里还有个简化版（此方法不需要安装 Android SDK）解锁同第一步，解锁后继续停留在 fastboot 页面刷入 TWRP保持手机与电脑的连接，打开工具，按照说明操作如果成功，将会自动进入到 Recovery 页面如果你是基于 Android 5.x 的 MIUI，可跳过下面步骤重点部分：因为 MIUI 官方对基于 Android 6.0 以上的 MIUI 进行了 data 分区加密，目前没有办法解密，所以会清空 data 分区以解决这个问题，不然无法刷机。内含重要数据的请做好备份！输入密码页面点击取消，然后改好语言，点击 清除 &gt; 格式化 data 分区输入 yes，清除内置存储和 data 分区如果你是基于 Android 5.x 的 MIUI，可跳过上面步骤返回主菜单，选择 挂载，打开 MTP 挂载存储，将 底层、Lineage OS 刷机包、Root 包、GApps、内核包 放在内置存储根目录开始刷机，一起刷还是分开刷随你选一切都刷好后，记得在刷最后一个包的完成页面点击 清除Dalvik / ART Cache重启，待进入系统进入系统后恢复数据，完成 注意： 记得备份好手机所有数据，如果不备份数据导致所有数据丢失后果自负。 此方法是最简单粗暴的方法，成功性未知，如果担心出现奇葩问题请参考完整版操作。 更新记录2017/02/05 23:57 添加简化版步骤2017/02/06 20:57 修改zz错误2017/02/07 20:55 添加刷入底层和内核2017/04/16 13:53 更新方法 修改图床","tags":[{"name":"Android","slug":"Android","permalink":"/tags/Android/"}]},{"title":"Hello World!","date":"2018-02-12T07:50:03.583Z","path":"2018/02/12/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]